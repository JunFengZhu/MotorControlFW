/* THE SOURCE CODE AND ITS
 * RELATED DOCUMENTATION IS PROVIDED "AS IS". TOSHIBA CORPORATION MAKES NO OTHER
 * WARRANTY OF ANY KIND, WHETHER EXPRESS, IMPLIED OR, STATUTORY AND DISCLAIMS ANY
 * AND ALL IMPLIED WARRANTIES OF MERCHANTABILITY, SATISFACTORY QUALITY, NON
 * INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. THE SOURCE CODE AND
 * DOCUMENTATION MAY INCLUDE ERRORS. TOSHIBA CORPORATION RESERVES THE RIGHT TO
 * INCORPORATE MODIFICATIONS TO THE SOURCE CODE IN LATER REVISIONS OF IT, AND TO
 * MAKE IMPROVEMENTS OR CHANGES IN THE DOCUMENTATION OR THE PRODUCTS OR
 * TECHNOLOGIES DESCRIBED THEREIN AT ANY TIME. TOSHIBA CORPORATION SHALL NOT BE
 * LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGE OR LIABILITY ARISING
 * FROM YOUR USE OF THE SOURCE CODE OR ANY DOCUMENTATION, INCLUDING BUT NOT
 * LIMITED TO, LOST REVENUES, DATA OR PROFITS, DAMAGES OF ANY SPECIAL, INCIDENTAL
 * OR CONSEQUENTIAL NATURE, PUNITIVE DAMAGES, LOSS OF PROPERTY OR LOSS OF PROFITS
 * ARISING OUT OF OR IN CONNECTION WITH THIS AGREEMENT, OR BEING UNUSABLE, EVEN IF
 * ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES AND WHETHER A CLAIM
 * FOR SUCH DAMAGE IS BASED UPON WARRANTY, CONTRACT, TORT, NEGLIGENCE OR
 * OTHERWISE. (C)Copyright TOSHIBA CORPORATION 2011 All rights reserved
 */

#ifndef _CONFIG_STORAGE_H_
#define _CONFIG_STORAGE_H_

#include "config.h"

/* The amount of memory needed to put all configurations settings in on
chunck of memory. +1 for crc8 at the end. */
#ifdef USE_RW_BOARD_SETTINGS
#define CONFIG_STORAGE_LEN (sizeof(MotorParameters) + sizeof(PIControlSettings) + sizeof(SystemDependandValues) + sizeof(ChannelDependandValues) + 1)
#else
#define CONFIG_STORAGE_LEN (sizeof(MotorParameters) + sizeof(PIControlSettings) + sizeof(SystemDependandValues) + 1)
#endif /* USE_RW_BOARD_SETTINGS */

#ifdef USE_CONFIG_STORAGE_EEPROM
#include BOARD_BOARD_HEADER_FILE
#define CONFIG_STORAGE_PAGE_SIZE (CONFIG_STORAGE_LEN + 4)
#endif

#ifdef USE_CONFIG_STORAGE_FLASH
#include TMPM_FC_HEADER_FILE
#define CONFIG_STORAGE_PAGE_SIZE FLASH_PAGE_SIZE
#endif

/* we need 4 bytes at the end to store our config magic */
#define CONFIG_STORAGE_MAX_ITEM_SIZE (CONFIG_STORAGE_PAGE_SIZE - 4)

int config_storage_load_config(void);
int config_storage_save_config(void);
int config_storage_clear_config(void);

#endif /* _CONFIG_STORAGE_H_ */
